{"version":3,"sources":["components/Navigation/index.js","components/About/index.js","components/Project/index.js","components/Portfolio/index.js","components/Contact/index.js","utils/helpers.js","components/Resume/index.js","components/Header/index.js","components/Footer/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Navigation","props","Navbar","expand","bg","sticky","className","to","class","About","id","src","alt","ProjectCards","name","image","href","github","deploy","topics","Wrapper","children","Portfolio","portfolio","map","project","Project","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","isValid","test","String","toLowerCase","validateEmail","value","length","htmlFor","type","defaultValue","onBlur","rows","onSubmit","preventDefault","Resume","Header","exact","path","render","component","Contact","Component","Footer","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.834ebc6b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\n\nfunction Navigation(props) {\n  return (\n    <div>\n      <Navbar expand=\"lg\" bg=\"dark\" sticky=\"top\">\n        <NavLink className=\"nav-link\" to=\"/\">\n          <div class=\"text-light\">\n            <h4 class=\"nav-title-font\">Imran Rasi</h4>\n          </div>\n        </NavLink>\n        <ul class=\"navbar-nav ml-auto navitem-indent\">\n          <li class=\"nav-item\">\n            <NavLink to=\"/about\">\n              <div class=\"nav-font text-light\">About Me</div>\n            </NavLink>\n          </li>\n          <li class=\"nav-item\">\n            <NavLink to=\"/portfolio\">\n              <div class=\"nav-font text-light\">Portfolio</div>\n            </NavLink>\n          </li>\n          <li class=\"nav-item\">\n            <NavLink to=\"/contact\">\n              <div class=\"nav-font text-light\">Contact</div>\n            </NavLink>\n          </li>\n          <li class=\"nav-item\">\n            <NavLink to=\"/resume\">\n              <div class=\"nav-font text-light\">Resume</div>\n            </NavLink>\n          </li>\n        </ul>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\n\nfunction About() {\n\n    return(\n        <section className=\"container\">\n            <h2 class=\"top-title\">Imran Rasi</h2>\n            <hr></hr>\n            <div>\n                <img class=\"mb-5\" id=\"avatar\" src=\"https://avatars.githubusercontent.com/u/111325853?s=400&u=55e0c01d7b3e749e7e5e1711792a1f5ae49a5be3&v=4\" alt=\"Michael Giddings\" />\n\n                <p>\n                My name is Imran Rasi and I am a BBA degree graduate and current Georgia Tech Coding Bootcamp Student. I am a hard-working, detail-oriented Software Developer passionate about learning, researching, and writing code and I relish the opportunity to take my programming skills and experience to a company where I can continue to learn and grow as a professional software developer.\n                </p>\n\n            </div>\n        </section>\n    )\n}\n\nexport default About;","\nimport React from 'react'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Individual Cards \nfunction ProjectCards(props) {\n    return (\n      <div className=\"card\"> \n        <div className=\"img-container\">\n          <img alt={props.name} src={props.image}/>\n        </div>\n        <div className=\"content\">\n              <p className=\"card-title\">{props.name}</p>\n              <p class=\"proj-icons-container\">\n              <a href={props.github}><img class=\"project-icon\" src=\"https://img.icons8.com/fluent/48/000000/github.png\" alt=\"GitHub Repo\" /></a> \n              <a href={props.deploy}><img class=\"project-icon\" src=\"https://img.icons8.com/fluent/48/000000/domain.png\" alt=\"Live Application\" /></a> \n       \n             \n             </p>\n              <p class=\"topics\">\n                    ({props.topics})\n                </p>\n        </div>\n      </div>\n    );\n}\n  \n  export default ProjectCards;","import React from 'react'; \nimport ProjectCards from '../../components/Project'\nimport portfolio from '../../portfolio.json'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>;\n}\n\nfunction Portfolio () {  \n\n    return (\n        <section className=\"container\">\n          <div className=\"project\">\n            <h2 className=\"top-title\">Bootcamp Portfolio</h2>\n            <hr></hr>\n          </div>\n\n          <Wrapper id=\"card-data\">\n            {portfolio.map((project) => (\n              <ProjectCards key={project.id} image={project.image} name={project.name} github={project.github} deploy={project.deploy} topics={project.topics}/>\n            ))}\n          </Wrapper>\n        </section>\n    \n    );\n  }\n\nexport default Portfolio;","import React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const { name, email, message } = formState;\n\n    function handleChange(e) {\n        if (e.target.name === 'email') {\n            const isValid = validateEmail(e.target.value);\n    \n                if(!isValid) {\n                    setErrorMessage('please enter a valid email');\n                } else {\n                    setErrorMessage('');\n                }\n\n            } else {\n                if (!e.target.value.length) {\n                  setErrorMessage(`${e.target.name} is required.`);\n                } else {\n                  setErrorMessage('');\n                } \n        }\n\n        if (!errorMessage) {\n        setFormState({...formState, [e.target.name]: e.target.value })\n        }\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n    }\n\nreturn (\n    <section className=\"container\">\n        <h2 data-testid='h1tag' className=\"top-title\">Contact Form</h2>\n        <hr></hr>\n        <form class=\"justify-content-center\" id=\"contact-form\">\n            <div class=\"mt-5\" >\n                <label htmlFor=\"name\">Name:</label>\n                <input class=\"form-control\" type=\"text\" name=\"name\"  defaultValue={name} onBlur={handleChange}/>\n            </div>\n            <div class=\"mt-5\" >\n                <label htmlFor=\"email\">Email Address:</label>\n                <input class=\"form-control\" type=\"email\"  name=\"email\" defaultValue={email} onBlur={handleChange} />\n            </div>\n            <div class=\"mt-5\" >\n                <label htmlFor=\"message\">Message:</label>\n                <textarea class=\"form-control\" name=\"message\" defaultValue={message} onBlur={handleChange} rows=\"7\" />\n            </div> \n            {errorMessage && (\n            <div>\n                <p className=\"error-text\">{errorMessage}</p>\n            </div>\n            )}\n\n            <div class=\"mt-5 mb-5\" >\n            <button data-testid='button' class=\"btn btn-outline-dark \" type=\"submit\" onSubmit={handleSubmit}>Submit</button>\n            </div>\n        </form>\n    </section>\n    );\n}\n    \nexport default ContactForm;","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from \"react\";\n\nfunction Resume() {\n  return (\n    <section class=\"container\">\n      <h2 className=\"top-title\">Resume</h2>\n      <hr></hr>\n\n      <div>\n        <div class=\"mt-5\">\n          <h2 className=\"top-title\">Imran Rasi</h2>\n          <ul>\n            <li>\n              Manager of the Afghan Rasa Logistic Company and a Life Student of the GT University.\n            </li>\n          </ul>\n\n          <p class=\"mt-5\">\n            <a href=\"https://www.linkedin.com/in/imran-rasi-a01a98259/\">\n              <img\n                src=\"https://img.icons8.com/fluent/48/000000/linkedin.png\"\n                alt=\"inkedIn\"\n              />\n            </a>\n          </p>\n\n          <a\n            href=\"https://docs.google.com/document/d/e/2PACX-1vRDFU4OVn8Urf97xw1_F1ucjEcH8pYzxKwfpE-DUqoVrsH_MeFpbLnv6AsxCil7RsgagLKG5uHf60bc/pub\"\n            class=\"link\"\n          >\n            Download Resume\n          </a>\n        </div>\n      </div>\n\n      <div class=\"justify-content-center mt-5\">\n        <div>\n          <h2 className=\"top-title\">Proficiencies</h2>\n          <ul>\n            <li>\n            JAVA,<br />\n            HTML, <br /> CSS (Bootstrap, HandleBars), <br /> JavaScript,<br /> jQuery,<br /> React.js,<br /> IndexedDB,<br />\n            Node.js,<br /> Express.js,<br /> SQL, <br />Sequelize, MongoDB, Mongoose, NoSQL, APIs, Templating.\n            </li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, HashRouter } from \"react-router-dom\";\nimport Navigation from \"../../components/Navigation\";\nimport About from \"../../components/About\";\nimport Portfolio from \"../../components/Portfolio\";\nimport Contact from '../../components/Contact';\nimport Resume from '../../components/Resume';\n\n\nclass Header extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <header>\n          <Navigation />\n        </header>\n\n        <div className=\"content\">\n          <Route exact path=\"/\" render={() => <Redirect to=\"/about\" />} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/portfolio\" component={Portfolio} />\n          <Route path=\"/contact\" component={Contact}/>\n          <Route path=\"/resume\" component={Resume}/>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default Header;\n","\nimport React from 'react';\n\nfunction Footer() {   \n    return (\n    <footer className=\"footer bg-dark fixed-bottom\">\n        <a href=\"https://github.com/imran7rassi\"><img src=\"https://img.icons8.com/color/48/000000/github--v1.png\" alt=\"Github\" className=\"icon\"/></a>\n        <a href=\"https://www.linkedin.com/in/imran-rasi-a01a98259/\"><img src=\"https://img.icons8.com/fluent/48/000000/linkedin.png\" alt=\"LinkedIn\" className=\"icon\"/></a>\n        <a href=\"http://twitter.com/ImranRassi\"><img src=\"https://img.icons8.com/color/48/null/twitter--v1.png\" alt=\"twitter\" className=\"icon\"/></a>\n    </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}